# This file is a template, and might need editing before it works on your project.
# Select image from https://hub.docker.com/_/php/
image: php:7.1.1

# Select what we should cache between builds
cache:
  paths:
  - vendor/

before_script:
- apt-get update -yqq
- apt-get install -yqq git libmcrypt-dev libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev subversion mariadb-client-10.0
# Install PHP extensions
- docker-php-ext-install mbstring mcrypt mysqli curl json intl gd xml zip bz2 opcache
# Install Composer
- curl -sS https://getcomposer.org/installer | php
# Install phpunit (https://docs.gitlab.com/ce/ci/examples/php.html)
- curl --location --output /usr/local/bin/phpunit https://phar.phpunit.de/phpunit.phar
- chmod +x /usr/local/bin/phpunit
# Prepare to run WP tests
- bash bin/install-wp-tests.sh wordpress_test root '' $MYSQL_PORT_3306_TCP_ADDR $WP_VERSION

# Bring in any services we need http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# See http://docs.gitlab.com/ce/ci/services/README.html for examples.
services:
  - mysql:5.7

# Set any variables we need
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE: root
  MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
test:
  script:
  - /usr/local/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never